
# -c: This prints only a count of the lines that match a pattern
rgukt-basar@shailu:~$ grep -c "ubuntu" grepfile.txt
1

# -h: Display the matched lines, but do not display the filenames.
rgukt-basar@shailu:~$ grep -h "ubuntu" grepfile.txt
hello welcome to ubuntu/linux

# -l: Displays list of a filenames only
rgukt-basar@shailu:~$ grep -l "ubuntu" grepfile.txt
grepfile.txt

# -n: Display the matched lines and their line numbers.
rgukt-basar@shailu:~$ grep -n "ubuntu" grepfile.txt
1:hello welcome to ubuntu/linux

# -v: This prints out all the lines that do not matches the pattern
rgukt-basar@shailu:~$ grep -v "ubuntu" grepfile.txt
rajiv gandhi university of knowledge technologies

# -e : Specifies expression with this option. Can use multiple times.
rgukt-basar@shailu:~$ grep -e "ubuntu" grepfile.txt
hello welcome to ubuntu/linux

# -o :Print only the matched parts of a matching line, with each such part on a
separate output line.
rgukt-basar@shailu:~$ grep -o "ubuntu" grepfile.txt
ubuntu

rgukt-basar@shailu:~$ grep "^unix" grepfile.txt;

rgukt-basar@shailu:~$ grep "hello" grepfile.txt;
hello welcome to ubuntu/linux

rgukt-basar@shailu:~$ grep -0 "ubuntu" grepfile.txt;
hello welcome to ubuntu/linux

rgukt-basar@shailu:~$ grep -v "rajiv" grepfile.txt
hello welcome to ubuntu/linux




SED command in unix supports regular expression which allows it
perform complex pattern matching.

rgukt-basar@shailu:~$ sed 's/ubuntu/linux/' grepfile.txt
hello welcome to linux/linux
rajiv gandhi university of knowledge technologies


rgukt-basar@shailu:~$ sed 's/ubuntu/unix/2' grepfile.txt
hello welcome to ubuntu/linux
rajiv gandhi university of knowledge technologies

rgukt-basar@shailu:~$ cat file.txt
rgukt-basar@shailu:~$ cat>file.txt
shailu
akhila
shruthi
nikhita
saritha

// **sort command**//
rgukt-basar@shailu:~$ sort file.txt
akhila
nikhita
saritha
shailu
shruthi
rgukt-basar@shailu:~$ cat>employee.txt
ajay manager account 45000
sunil clerk account 25000
varun manager sales 50000
amit manager account 47000
tarun peon sales 15000
deepak clerk sales 23000
sunil peon sales 13000

// **awk command**//
rgukt-basar@shailu:~$ awk '/manager/ {print}' employee.txt;
ajay manager account 45000
varun manager sales 50000
amit manager account 47000
rgukt-basar@shailu:~$ awk '{print $1,$4}' employee.txt
ajay 45000
sunil 25000
varun 50000
amit 47000
tarun 15000
deepak 23000
sunil 13000
rgukt-basar@shailu:~$ awk '{print NR,$0}' employee.txt;
1 ajay manager account 45000
2 sunil clerk account 25000
3 varun manager sales 50000
4 amit manager account 47000
5 tarun peon sales 15000
6 deepak clerk sales 23000
7 sunil peon sales 13000
rgukt-basar@shailu:~$ awk '{print $2}' file1.txt;

rgukt-basar@shailu:~$ awk '{print $2}' file.txt;





rgukt-basar@shailu:~$ awk '{print NR}' file.txt;
1
2
3
4
5
rgukt-basar@shailu:~$ awk free -M
awk: cannot open -M (No such file or directory)
rgukt-basar@shailu:~$ awk free -file.txt
awk: cannot open -file.txt (No such file or directory)
rgukt-basar@shailu:~$ awk free -COMMAND
awk: cannot open -COMMAND (No such file or directory)
rgukt-basar@shailu:~$ awk free -COMMAND;
awk: cannot open -COMMAND (No such file or directory)
rgukt-basar@shailu:~$ awk '/Mem/{print}/' free -m;
awk: line 1: runaway regular expression / ...
rgukt-basar@shailu:~$ 

